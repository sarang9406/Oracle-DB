
-- 1. 'Shipping' department에 일하는 직원이 몇명인지 출력
SELECT count(employee_id)
FROM EMPLOYEES e2 JOIN DEPARTMENTS USING (department_id)
WHERE DEPARTMENT_NAME = 'Shipping';

-- 2. 'Shipping' department에 일하는 직원의 성과 이름, salary, 일하는 도시를 출력
SELECT first_name, last_name, salary, city
FROM EMPLOYEES e JOIN DEPARTMENTS USING (department_id)
				 JOIN locations USING (Location_id)
WHERE department_name = 'Shipping';

-- 3. Europe에서 일하는 직원들의 이름, 도시, 나라, 부서 이름을 출력
SELECT first_name, last_name, city, country_name, department_name, state_province
FROM regions JOIN COUNTRIES using(region_id)
			 JOIN LOCATIONS USING (country_id)
			 JOIN DEPARTMENTS using(location_id)
			 JOIN EMPLOYEES USING (department_id)
WHERE region_name = 'Europe';

-- 4. 부서번호, 부서명와 각 부서별로 근무하고 있는 직원의 수 alias NUM_OF_EMP, 부서번호로 오름차순으로 정렬해서 출력 (null일 경우 N/A로 출력되게 하자)
SELECT d.department_id,	department_name, 
	CASE WHEN count(EMPLOYEE_ID)= 0 THEN 'N/A'
	     WHEN count(EMPLOYEE_ID)> 0 THEN to_char(count(EMPLOYEE_ID))
	END NUM_OF_EMP
FROM EMPLOYEES e, DEPARTMENTS d
WHERE e.DEPARTMENT_ID (+) = d.DEPARTMENT_ID
GROUP BY department_name, d.DEPARTMENT_ID
ORDER BY 1;

--5. 모든 사원의 연봉을 출력하라 (풀네임과 함께), 단 연봉의 형식은 $0000,000으로 alias 연봉, 풀네임은 한 컬럼에 담아서 alias 이름 
SELECT FIRST_NAME||' '|| LAST_NAME "Full Name", TO_CHAR((SALARY *12+salary*NVL(commission_pct,0)),'L9999,999') "Salary"
FROM EMPLOYEES e2;

--6. 나라별로 가장 많은 연봉을 받는 직원의 성과 이름, 부서이름, 연봉을 출력
SELECT country_name, first_name||' '||last_name AS "EMPLOYEE NAME", department_name, SALARY * 12 + salary*NVL(commission_pct, 0) AS "SALARY"
FROM COUNTRIES JOIN LOCATIONS USING (country_id)
	       JOIN DEPARTMENTS	USING(location_id)
	       JOIN EMPLOYEES USING (department_id)
WHERE SALARY * 12 + salary*NVL(commission_pct,0) IN ( SELECT max(SALARY * 12 + salary*NVL(commission_pct, 0))
						      FROM COUNTRIES JOIN LOCATIONS USING (country_id)
								     JOIN DEPARTMENTS USING(location_id)
							             JOIN EMPLOYEES USING (department_id)
						      GROUP BY country_name)
ORDER BY SALARY * 12 + salary*NVL(commission_pct,0) DESC;
	

--7. 부서를 가지고 있는 나라 들중 가장 많은 부서를 갖고 있는 나라 이름을 출력
SELECT country_name
FROM DEPARTMENTS JOIN locations	USING(location_id)
		 JOIN countries USING (COUNTRY_id)
WHERE rownum = 1
GROUP BY country_name
ORDER BY count(department_name) DESC;

--8. 각 부서에서 부서이동이 있었던 직원들의 수, 직업 명, 해당 직업이 속해있는 부서명을 출력.
SELECT count(employee_id), job_title, DEPARTMENT_name
FROM JOB_HISTORY JOIN DEPARTMENTS USING (department_id)
				 JOIN jobs USING (job_id)
GROUP BY job_title, department_name;

--9. 이 회사에서 가장 오래 일한 직원의 이름, 일을 시작한 날짜 (mm dd yyyy), 부서명, 월급을 출려
SELECT first_name||' '||last_name AS "FULL_NAME",  to_char(TO_date(hire_date), 'MONTHDD, Yyyy') AS "HIRE_DATE",department_name, salary
FROM EMPLOYEES JOIN DEPARTMENTS using(department_id)
WHERE hire_date = ( SELECT min(hire_date) FROM EMPLOYEES );

--10. 각 사원의  이름과 근무부서명, 직업 명과 함께
--	   근무 일수를 기준으로 12년이하 New, 12~15년 Junior, 16년이상은 Senior로 등급을 alias 경력으로 출력
SELECT first_name, department_name, job_title,
	CASE WHEN EXTRACT(YEAR FROM sysdate) - EXTRACT (YEAR FROM hire_date) <= 12 THEN 'New'
	     WHEN EXTRACT(YEAR FROM sysdate) - EXTRACT (YEAR	FROM hire_date) <= 15 THEN 'Junior'
	     ELSE 'Senior'
	END
	AS "EXPERIENCE"
FROM EMPLOYEES e JOIN DEPARTMENTS USING (department_id)
		 JOIN jobs USING (job_id);			

